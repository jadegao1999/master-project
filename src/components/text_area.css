.text-area {
  overflow-y: scroll;
  height: auto;
  height: 45vh;
  display: flex;
  flex-direction: column-reverse;
  padding: 0 80px;
  mask-image: linear-gradient(to top, rgba(0,0,0,1) 0%,rgba(0,0,0,1) 25%, rgba(0,0,0,0.6) 50%, rgba(0,0,0,0) 100%);
}

.text-area::-webkit-scrollbar {
  display: none;
}

.text-item {
  display: flex;
  justify-content: left;
}

.animation {
  animation: fadeIn 0.5s ease-in both;
}

.text-item p span {
  color: yellow;
}

.text-item p span:hover {
  cursor: pointer;
}

.narrative-text-item p {
  word-wrap: break-word;
  line-height: 160%;
}

.dialog-text-item {
  position: relative;
  margin-top: 12px;
  margin-bottom: 12px;
}

.dialog-text-item.bubble-right {
  margin-left: auto;
}

.dialog-text-item p {
  color: black;
  display: inline-block;
  border-radius: 12px;
  padding: 20px 40px;
  margin: 0;
}

.bubble-left::before {
  content: "";
  width: 0px;
  height: 0px;
  position: absolute;
  border-left: 25px solid transparent;
  border-right: 20px solid currentColor;
  border-top: 16px solid transparent;
  border-bottom: 16px solid currentColor;
  left: -25px;
  bottom: 12px;
}

.bubble-right::before {
  content: "";
  width: 0px;
  height: 0px;
  position: absolute;
  border-right: 25px solid transparent;
  border-left: 20px solid currentColor;
  border-top: 16px solid transparent;
  border-bottom: 16px solid currentColor;
  right: -25px;
  bottom: 12px;
}

.action-text-item p {
  color: orange;
}

/* character's dialog color. */
.liusu_yellow, .liusu_green, .liusu_earrings {
  color: red;
}
.liusu_yellow p, .liusu_green p, .liusu_earrings p {
  background-color: red;
}

.baoluo, .baoluo_earrings {
  color: yellow;
}
.baoluo p, .baoluo_earrings p {
  background-color: yellow;
}

.door {
  color: blue;
}
.door p {
  background-color: blue;
}

.old_lady_bai {
  color: green;
}
.old_lady_bai p {
  background-color: green;
}

.liuyuan {
  color: pink;
}
.liuyuan p {
  background-color: pink;
}

.sister_in_law {
  color: sienna;
}
.sister_in_law p {
  background-color: sienna;
}

/* React CSS Transition rules */

@keyframes fadeIn {
  0% {opacity:0;}
  100% {opacity:1;}
}